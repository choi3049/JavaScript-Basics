1 고차 함수 사용하기

함수를 호출할 때마다 반환 함수를 생성하는 함수를 고차 함수(high order function)라고 합니다.

const func = () => {
  return () => {
    console.log('hello');
  };
};

반환된 함수는 다른 변수에 저장할 수 있고, 그 변수에 저장된 함수를 다시 호출할 수 있습니다.

const innerFunc = func();
innerFunc(); // hello

반환하는 값을 바꾸고 싶을 때는 매개변수를 사용합니다.

const func = (msg) => {
    return () => {
        console.log(msg);
    };
};


화살표 함수 문법에 따라 함수의 본문에서 바로 반환되는 값이 있으면 {와 return을 생략할 수 있습니다.

const func = (msg) => () => {
  console.log(msg);
};



2 if 문 중첩 제거하기

if 문이 중첩되면 코드를 파악하기 어렵습니다. 다음과 같은 방법으로 if 문의 중첩을 제거합니다.

1) 공통된 절차를 각 분기점 내부에 넣는다.

2) 분기점에서 짧은 절차부터 실행하게 if 문을 작성한다.

3) 짧은 절차가 끝나면 return(함수 내부의 경우)이나 break(for 문 내부의 경우)로 중단한다.

4) else를 제거한다(이때 중첩 하나가 제거된다).

5) 다음 중첩된 분기점이 나올 때 1~4의 과정을 반복한다.